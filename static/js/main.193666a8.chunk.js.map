{"version":3,"sources":["contexts/AppContext.js","actions/index.js","components/selectComponents/BuildButton.js","utils/index.js","components/selectComponents/options/GeneralOption.js","components/selectComponents/options/ModelOption.js","constants/index.js","components/selectComponents/Cpu.js","components/selectComponents/Gpu.js","components/selectComponents/Ram.js","components/selectComponents/Strage.js","components/selectComponents/SelectParts.js","components/resultComponents/Result.js","components/resultComponents/BuildResult.js","components/Container.js","components/NavBar.js","reducers/cpu.js","reducers/gpu.js","reducers/ram.js","reducers/storage.js","reducers/result.js","reducers/index.js","components/App.js","index.js"],"names":["AppContext","createContext","BUILD_CPU_MODEL","BUILD_GPU_MODEL","BUILD_RAM_MODEL","BUILD_STORAGE_SIZE","BUILD_STORAGE_BRAND","BUILD_STORAGE_MODEL","BUILD_PC","DELETE_PC","DELETE_ALL_PC","BuildButton","useContext","state","dispatch","isResultBlank","result","length","type","className","onClick","e","preventDefault","parts","partsInfo","infoOfCpu","document","querySelector","infoOfGpu","infoOfRam","infoOfStorage","isInputComplete","value","benchmarkOfCpu","benchmarkOfGpu","benchmarkOfRam","benchmarkOfStorage","getPartsInfo","window","alert","confirm","disabled","GeneralOption","ModelOption","Benchmark","Model","URL","Cpu","useState","brandList","setBrandList","cpuList","setCpuList","useEffect","fetch","then","response","json","data","forEach","obj","includes","Brand","push","onChange","id","map","index","cpu","Gpu","gpuList","setGpuList","gpu","Ram","ramList","setRamList","amountList","setAmountList","amount","match","toString","substring","sort","a","b","selectModel","ram","Strage","hddModelList","setHddModelList","ssdModelList","setSsdModelList","hddSizeList","setHddSizeList","ssdSizeList","setSsdSizeList","hddBrandList","setHddBrandList","ssdBrandList","setSsdBrandList","sizeList","size","storage","modelList","brand","model","SelectParts","Result","resultOfWorking","resultOfGaming","BuildResult","Container","NavBar","action","filterList","filter","ssd","newState","optionalSpec","benchmarkOfCpuForWorking","Math","floor","benchmarkOfGpuForWorking","benchmarkOfRamForWorking","benchmarkOfStorageForWorking","benchmarkOfCpuForGaming","benchmarkOfGpuForGaming","benchmarkOfRamForGaming","benchmarkOfStorageForGaming","combineReducers","App","useReducer","reducer","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.193666a8.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;","export const BUILD_CPU_MODEL = \"BUILD_CPU_MODEL\";\nexport const BUILD_GPU_MODEL = \"BUILD_GPU_MODEL\";\nexport const BUILD_RAM_MODEL = \"BUILD_RAM_MODEL\";\nexport const BUILD_STORAGE_SIZE = \"BUILD_STORAGE_SIZE\";\nexport const BUILD_STORAGE_BRAND = \"BUILD_STORAGE_BRAND\";\nexport const BUILD_STORAGE_MODEL = \"BUILD_STORAGE_MODEL\";\n\nexport const BUILD_PC = \"BUILD_PC\";\nexport const DELETE_PC = \"DELETE_PC\";\nexport const DELETE_ALL_PC = \"DELETE_ALL_PC\";","import React, { useContext } from \"react\";\n\nimport { BUILD_PC, DELETE_ALL_PC } from \"../../actions\";\n\nimport AppContext from \"../../contexts/AppContext\";\n\nimport { getPartsInfo } from \"../../utils\";\n\nconst BuildButton = () => {\n    const { state, dispatch } = useContext(AppContext);\n\n    // PCを構築していない場合はDelete Allボタンは非活性\n    const isResultBlank = state.result.length === 0;\n\n    const build = e => {\n        e.preventDefault();\n        // buildの情報を取得する\n        const parts = getPartsInfo();\n        if (parts.isInputComplete) dispatch({type: BUILD_PC , parts});\n        else window.alert(\"パーツの選択が完了していません\");\n    };\n\n    const deleteAll = e => {\n        e.preventDefault();\n        const result = window.confirm(\"全てのPCを削除してもいいですか？\");\n        if(result) {\n            dispatch({type: DELETE_ALL_PC});\n        }     \n    };\n\n    return (\n        <>\n            <button type=\"button\" className=\"btn btn-outline-dark m-3\" onClick={build}>Build PC</button>\n            <button type=\"button\" className=\"btn btn-outline-danger m-3\" onClick={deleteAll} disabled={isResultBlank}>Delete All PC</button>\n        </>\n    );\n};\n\nexport default BuildButton;","export const getPartsInfo = () => {\n    const partsInfo = {};\n    const infoOfCpu = document.querySelector('#model-of-cpu');\n    const infoOfGpu = document.querySelector('#model-of-gpu');\n    const infoOfRam = document.querySelector('#model-of-ram');\n    const infoOfStorage = document.querySelector('#model-of-storage');\n    const isInputComplete = !infoOfCpu.value || !infoOfGpu.value || !infoOfRam.value || !infoOfStorage.value ? false : true;\n\n    if (isInputComplete) {\n        partsInfo.benchmarkOfCpu = infoOfCpu.value;\n        partsInfo.benchmarkOfGpu = infoOfGpu.value;\n        partsInfo.benchmarkOfRam = infoOfRam.value;\n        partsInfo.benchmarkOfStorage = infoOfStorage.value;\n    }\n    \n    partsInfo.isInputComplete = isInputComplete;\n    return partsInfo;\n}","import React from \"react\";\n\nconst GeneralOption = ({value}) => {\n    return <option value={value}>{value}</option>;\n}\n\nexport default GeneralOption;","import React from \"react\";\n\nconst ModelOption = ({value}) => {\n    return <option value={value.Benchmark} >{value.Model}</option>;\n}\n\nexport default ModelOption;","export const URL = \"https://api.recursionist.io/builder/computers?type=\";","import React, { useEffect, useContext, useState } from \"react\";\n\nimport { BUILD_CPU_MODEL } from \"../../actions\"\n\nimport GeneralOption from \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n\nimport AppContext from \"../../contexts/AppContext\";\n\nimport { URL } from \"../../constants\";\n\nconst Cpu = () => {\n    const { state, dispatch } = useContext(AppContext);\n    const [ brandList,setBrandList ] = useState([]);\n    const [ cpuList, setCpuList ] = useState([]);\n    useEffect(() => {fetch(URL+'cpu')\n      .then(response => response.json())\n        .then(data => {\n            let brandList = [];\n            data.forEach(obj => {\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n            });\n            setBrandList(brandList);\n            setCpuList(data)})\n    }, []);\n    const selectModel = e => {\n        e.preventDefault();\n        dispatch({type: BUILD_CPU_MODEL, cpuList});\n    }\n\n    return (\n        <div className=\"step1 p-2\">\n            <span className=\"h4 p-1\">step1 : Select Your CPU</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-6\" onChange={selectModel} id=\"brand-of-cpu\">\n                        <option value=\"\">-</option>\n                        {brandList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-6\" id=\"model-of-cpu\">\n                        <option value=\"\">-</option>\n                        {state.cpu.map((value, index) => <ModelOption key={index} value={value}/>)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Cpu;","import React, { useEffect, useContext, useState } from \"react\";\n\nimport { BUILD_GPU_MODEL } from \"../../actions\"\n\nimport GeneralOption from \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n\nimport AppContext from \"../../contexts/AppContext\";\n\nimport { URL } from \"../../constants\";\n\nconst Gpu = () => {\n    const {state, dispatch} = useContext(AppContext);\n    const [gpuList, setGpuList] = useState([]);\n    const [brandList,setBrandList] = useState([]);\n\n    useEffect(() => {fetch(URL+'gpu')\n      .then(response => response.json())\n        .then(data => {\n            let brandList = [];\n            data.forEach(obj => {\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n            });\n            setBrandList(brandList);            \n            setGpuList(data)})\n    }, []);\n\n    const selectModel = e => {\n        e.preventDefault();\n        dispatch({type: BUILD_GPU_MODEL, gpuList});\n    }\n\n    return (\n        <div className=\"step2 p-2\">\n            <span className=\"h4 p-1\">step2: Select your GPU</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-6\" onChange={selectModel} id=\"brand-of-gpu\" >\n                    <option value=\"\">-</option>\n                        {brandList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-6\" id=\"model-of-gpu\">\n                        <option value=\"\">-</option>\n                        {state.gpu.map((value, index) => <ModelOption key={index} value={value}/>)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Gpu;","import React, { useEffect, useContext, useState } from \"react\";\n\nimport { BUILD_RAM_MODEL } from \"../../actions\"\n\nimport GeneralOption from \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n\nimport AppContext from \"../../contexts/AppContext\";\n\nimport { URL } from \"../../constants\";\n\nconst Ram = () => {\n    const { state, dispatch } = useContext(AppContext);\n    const [ ramList, setRamList ] = useState([]);\n    const [ amountList,setAmountList ] = useState([]);\n    const [ brandList,setBrandList ] = useState([]);\n\n    useEffect(() => {fetch(URL+'ram')\n      .then(response => response.json())\n        .then(data => {\n            let brandList = [];\n            let amountList = [];\n            data.forEach(obj => {\n                // モデルの中から本数のみを正規表現で取得\n                const amount = obj.Model.match(/\\dx/g).toString().substring(0,1);\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n                if (!amountList.includes(amount)) amountList.push(amount);\n            });\n            setBrandList(brandList); \n            setAmountList(amountList.sort((a, b) => a - b));           \n            setRamList(data)})\n    }, []);\n\n    const selectModel = e => {\n        e.preventDefault();\n        dispatch({type: BUILD_RAM_MODEL, ramList});\n    }\n\n    return (\n        <div className=\"step3 p-2\">\n            <span className=\"h4 p-1\">step3: Select your RAM</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">How many?</span>\n                    <select className=\"form-control col-4\" onChange={selectModel} id=\"amount-of-ram\">\n                        <option value=\"\">-</option>\n                        {amountList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-4\" onChange={selectModel} id=\"brand-of-ram\">\n                        <option value=\"\">-</option>\n                        {brandList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-4\" id=\"model-of-ram\">\n                        <option value=\"\">-</option>\n                        {state.ram.map((value, index) => <ModelOption key={index} value={value}/>)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Ram;","import React, { useEffect, useContext, useState } from \"react\";\n\nimport { BUILD_STORAGE_BRAND, BUILD_STORAGE_MODEL, BUILD_STORAGE_SIZE } from \"../../actions\";\n\nimport GeneralOption from \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n\nimport AppContext from \"../../contexts/AppContext\";\n\nimport { URL } from \"../../constants\";\n\nconst Strage = () => {\n    const { state, dispatch } = useContext(AppContext);\n    const [hddModelList, setHddModelList] = useState([]);\n    const [ssdModelList, setSsdModelList] = useState([]);\n    const [hddSizeList, setHddSizeList] = useState([]);\n    const [ssdSizeList, setSsdSizeList] = useState([]);\n    const [hddBrandList, setHddBrandList] = useState([]);\n    const [ssdBrandList, setSsdBrandList] = useState([]);\n\n    useEffect( () => {fetch(URL+'hdd')\n      .then(response => response.json())\n        .then(data => {\n            let sizeList = [];\n            let brandList = [];\n            data.forEach(obj => {\n                // モデルの中からバイト数のみを正規表現で取得\n                const size = obj.Model.match(/\\d*[TG]B/g).toString();\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n                if (!sizeList.includes(size)) sizeList.push(size);\n            });\n            setHddSizeList(sizeList);  \n            setHddBrandList(brandList); \n            setHddModelList(data);\n        })\n    }, []);\n\n    useEffect(() => {fetch(URL+'ssd')\n      .then(response => response.json())\n        .then(data => {\n            let sizeList = [];\n            let brandList = [];\n            data.forEach(obj => {\n                // モデルの中からバイト数のみを正規表現で取得\n                const size = obj.Model.match(/\\d*[TG]B/g).toString();\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n                if (!sizeList.includes(size)) sizeList.push(size);\n            });\n            setSsdSizeList(sizeList); \n            setSsdBrandList(brandList); \n            setSsdModelList(data);\n        })\n    }, []);\n\n    const selectSize = e => {\n        e.preventDefault();\n        let sizeList;\n        const type = document.querySelector('#type-of-storage').value;\n        if (type === \"HDD\") sizeList = hddSizeList;\n        else if (type === \"SSD\") sizeList = ssdSizeList;\n        else sizeList = [];\n        dispatch({type: BUILD_STORAGE_SIZE, sizeList});\n    }\n\n    const selectBrand = e => {\n        e.preventDefault();\n        let sizeList;\n        let brandList;\n        const type = document.querySelector('#type-of-storage').value;\n        if (type === \"HDD\") {\n            sizeList = hddSizeList;\n            brandList = hddBrandList;\n        } else if (type === \"SSD\") {\n            sizeList = ssdSizeList;\n            brandList = ssdBrandList;\n        } else {\n            sizeList = [];\n            brandList = [];\n        }\n        dispatch({type: BUILD_STORAGE_BRAND, sizeList, brandList});\n    }\n\n    const selectModel = e => {\n        e.preventDefault();\n        let sizeList;\n        let brandList;\n        let modelList;\n        const type = document.querySelector('#type-of-storage').value;\n        if (type === \"HDD\") {\n            sizeList = hddSizeList;\n            brandList = hddBrandList;\n            modelList = hddModelList;\n        } else if (type === \"SSD\") {\n            sizeList = ssdSizeList;\n            brandList = ssdBrandList;\n            modelList = ssdModelList;\n        } else {\n            sizeList = [];\n            brandList = [];\n            modelList = [];\n        }\n        dispatch({type: BUILD_STORAGE_MODEL, sizeList, brandList, modelList});\n    }\n\n    return (\n        <div className=\"step4 p-2\">\n            <span className=\"h4 p-1\">step4: Select your Storage</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">HDD or SSD</span>\n                    <select className=\"form-control col-6\" onChange={selectSize} id=\"type-of-storage\">\n                        <option value=\"\">-</option>\n                        <option value=\"HDD\">HDD</option>\n                        <option value=\"SSD\">SSD</option>\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Strage</span>\n                    <select className=\"form-control col-6\" onChange={selectBrand} id=\"size-of-storage\">\n                        <option value=\"\">-</option>\n                        {state.storage.size.map((value, index) => <GeneralOption key={index} value={value} />)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-6\" onChange={selectModel} id=\"brand-of-storage\">\n                        <option value=\"\">-</option>\n                        {state.storage.brand.map((value, index) => <GeneralOption key={index} value={value} />)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-6\" id=\"model-of-storage\">\n                        <option value=\"\">-</option>\n                        {state.storage.model.map((value, index) => <ModelOption key={index} value={value} />)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Strage;","import React from \"react\";\n\nimport BuildButton from \"./BuildButton\";\nimport Cpu from \"./Cpu\";\nimport Gpu from \"./Gpu\";\nimport Ram from \"./Ram\";\nimport Strage from \"./Strage\";\n\nconst SelectParts = () => {\n    return (\n        <div className=\"col\">\n            <Cpu />\n            <Gpu />\n            <Ram />\n            <Strage />\n            <BuildButton />\n        </div>\n    );\n};\n\nexport default SelectParts;","import React, { useContext } from \"react\";\nimport { DELETE_PC } from \"../../actions\";\nimport AppContext from \"../../contexts/AppContext\";\n\nconst Result = ({value}) => {\n    const { dispatch } = useContext(AppContext);\n    const id = value.id;\n    const deleteButton = () => {\n        const result = window.confirm(`(id=${id})のPCを削除してもいいですか？`);\n        if(result) {\n            dispatch({type: DELETE_PC, id});\n        }\n    };\n\n    return (\n        <tr>\n            <td>{value.id}</td>\n            <td>{value.benchmarkOfCpu}</td>\n            <td>{value.benchmarkOfGpu}</td>\n            <td>{value.benchmarkOfRam}</td>\n            <td>{value.benchmarkOfStorage}</td>\n            <td>{value.resultOfWorking}</td>\n            <td>{value.resultOfGaming}</td>\n            <td><button type=\"button\" className=\"btn btn-danger\" onClick={deleteButton}>Delete PC</button></td>\n        </tr>\n    );\n};\n\nexport default Result;","import React, { useContext } from \"react\";\n\nimport AppContext from \"../../contexts/AppContext\";\n\nimport Result from \"./Result\";\n\nconst BuildResult = () => {\n    const { state } = useContext(AppContext);\n    return (\n        <div className=\"m-2position-relative\">\n            <h4>Spec</h4>\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>CPU</th>\n                        <th>GPU</th>\n                        <th>RAM</th>\n                        <th>Strage</th>\n                        <th>Gaming</th>\n                        <th>Working</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {state.result.map((value, index) => <Result key={index} value={value} />)}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default BuildResult;","import React from \"react\";\n\nimport SelectParts from \"./selectComponents/SelectParts\";\nimport BuildResult from \"./resultComponents/BuildResult\";\n\nconst Container = () => {\n    return (\n        <div className=\"container-fluid bg-light p-2\">\n            <SelectParts />\n            <BuildResult />       \n        </div>\n    );\n};\n\nexport default Container;","import React from \"react\";\n\nconst NavBar = () => {\n    return (\n        <nav className=\"navbar navbar-light bg-secondary\">\n            <span className=\"navbar-brand mb-0 h1 text-light p-3\">Build Your Own PC</span>\n        </nav>\n    );\n};\n\nexport default NavBar;","import {BUILD_CPU_MODEL} from \"../actions\";\n\nconst cpu = (state = [], action) => {\n    switch(action.type) {\n        case BUILD_CPU_MODEL:\n            const cpuList = action.cpuList;\n            const brand = document.querySelector('#brand-of-cpu').value;\n            const filterList = cpuList.filter(cpu => cpu.Brand === brand);\n            return filterList;\n\n        default:\n            return state;\n    }\n}\n\nexport default cpu;","import { BUILD_GPU_MODEL } from \"../actions\";\n\nconst gpu = (state = [], action) => {\n    switch(action.type) {\n        case BUILD_GPU_MODEL:\n            const gpuList = action.gpuList;\n            const brand = document.querySelector('#brand-of-gpu').value;\n            const filterList = gpuList.filter(gpu => gpu.Brand === brand);\n            return filterList;\n\n        default:\n            return state;\n    }\n}\n\nexport default gpu;","import { BUILD_RAM_MODEL } from \"../actions\";\n\nconst ram = (state = [], action) => {\n    switch(action.type) {\n        case BUILD_RAM_MODEL:\n            const ramList = action.ramList;\n            const amount = document.querySelector('#amount-of-ram').value;\n            const brand = document.querySelector('#brand-of-ram').value;\n            const filterList = ramList.filter(ram => ram.Brand === brand).filter(ram => ram.Model.match(/\\dx/g).toString().substring(0,1) === amount);\n            return filterList;\n\n        default:\n            return state;\n    }\n}\n\nexport default ram;","import { BUILD_STORAGE_BRAND, BUILD_STORAGE_MODEL, BUILD_STORAGE_SIZE } from \"../actions\";\n\nconst ssd = (state = {}, action) => {\n    switch(action.type) {\n        case BUILD_STORAGE_SIZE:\n            return {size: action.sizeList, brand: [], model: []};\n\n        case BUILD_STORAGE_BRAND:\n            return {size: action.sizeList, brand: action.brandList, model: []};\n\n        case BUILD_STORAGE_MODEL:\n            const newState = {size: action.sizeList, brand: action.brandList, model: []};\n            const brand = document.querySelector('#brand-of-storage').value;\n            const size = document.querySelector('#size-of-storage').value;\n            const filterList = action.modelList.filter(storage => storage.Brand === brand).filter(storage => storage.Model.includes(size));\n            newState.model = filterList;\n            return newState;\n\n        default:\n            return state;\n    }\n}\n\nexport default ssd;","// Actions\nimport { BUILD_PC, DELETE_PC, DELETE_ALL_PC } from \"../actions\";\n\nconst result = (state = {}, action) => {\n    switch(action.type) {\n        case BUILD_PC:\n            const benchmarkOfCpu = action.parts.benchmarkOfCpu;\n            const benchmarkOfGpu = action.parts.benchmarkOfGpu;\n            const benchmarkOfRam = action.parts.benchmarkOfRam;\n            const benchmarkOfStorage = action.parts.benchmarkOfStorage;\n            const optionalSpec = document.querySelector('#type-of-storage').value === \"SSD\" ? 0.1 : 0.025 ;\n\n            const benchmarkOfCpuForWorking = Math.floor(+benchmarkOfCpu * 0.6);\n            const benchmarkOfGpuForWorking = Math.floor(+benchmarkOfGpu * 0.25);\n            const benchmarkOfRamForWorking = Math.floor(+benchmarkOfRam * 0.1);\n            const benchmarkOfStorageForWorking = Math.floor(+benchmarkOfStorage * 0.05);\n            const resultOfWorking = benchmarkOfCpuForWorking + benchmarkOfGpuForWorking + benchmarkOfRamForWorking + benchmarkOfStorageForWorking;\n\n            const benchmarkOfCpuForGaming = Math.floor(+benchmarkOfCpu * 0.25);\n            const benchmarkOfGpuForGaming = Math.floor(+benchmarkOfGpu * 0.6);\n            const benchmarkOfRamForGaming = Math.floor(+benchmarkOfRam * 0.125);\n            const benchmarkOfStorageForGaming = Math.floor(+benchmarkOfStorage * optionalSpec);\n            const resultOfGaming = benchmarkOfCpuForGaming + benchmarkOfGpuForGaming + benchmarkOfRamForGaming + benchmarkOfStorageForGaming;\n\n            const id = state.length === 0 ? 1 : state[state.length - 1].id + 1;\n            const result = {id, benchmarkOfCpu, benchmarkOfGpu, benchmarkOfRam, benchmarkOfStorage, resultOfWorking, resultOfGaming};\n\n            return [...state, result];\n\n        case DELETE_PC:\n            return state.filter(result => result.id !== action.id);\n        \n        case DELETE_ALL_PC:\n            return [];\n\n        default:\n            return state;\n    }\n};\n\nexport default result;","import { combineReducers } from \"redux\";\n\nimport cpu from \"./cpu\";\nimport gpu from \"./gpu\";\nimport ram from \"./ram\";\nimport storage from \"./storage\";\nimport result from \"./result\";\n\nexport default combineReducers({cpu, gpu, ram, storage, result});","import React, {useReducer} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport AppContext from \"../contexts/AppContext\";\nimport Container from \"./Container\";\nimport NavBar from \"./NavBar\";\n\nimport reducer from \"../reducers\";\n\nconst App = () => {\n  const initialState = {cpu: [], gpu: [], ram: [], storage: {size: [], brand: [], model: []}, result: []};\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <AppContext.Provider value={{state, dispatch}}>\n      <NavBar />\n      <Container/>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}