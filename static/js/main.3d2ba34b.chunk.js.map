{"version":3,"sources":["contexts/AppContext.js","components/resultComponents/BuildResult.js","components/selectComponents/BuildButton.js","actions/index.js","components/selectComponents/options/GeneralOption.js","components/selectComponents/options/ModelOption.js","constants/index.js","components/selectComponents/Cpu.js","components/selectComponents/Gpu.js","components/selectComponents/Ram.js","components/selectComponents/Strage.js","components/selectComponents/SelectParts.js","components/Container.js","components/NavBar.js","reducers/cpu.js","reducers/gpu.js","reducers/ram.js","reducers/storage.js","reducers/build.js","reducers/index.js","components/App.js","index.js"],"names":["AppContext","createContext","BuildResult","useContext","state","className","BuildButton","type","onClick","e","preventDefault","console","log","BUILD_CPU_MODEL","BUILD_GPU_MODEL","BUILD_RAM_MODEL","BUILD_STORAGE_SIZE","BUILD_STORAGE_BRAND","BUILD_STORAGE_MODEL","BUILD_PC","GeneralOption","value","ModelOption","Model","Benchmark","URL","Cpu","dispatch","useState","brandList","setBrandList","cpuList","setCpuList","useEffect","fetch","then","response","json","data","forEach","obj","includes","Brand","push","onChange","id","map","index","cpu","Gpu","gpuList","setGpuList","gpu","Ram","ramList","setRamList","amountList","setAmountList","amount","match","toString","substring","sort","a","b","selectModel","ram","Strage","hddModelList","setHddModelList","ssdModelList","setSsdModelList","hddSizeList","setHddSizeList","ssdSizeList","setSsdSizeList","hddBrandList","setHddBrandList","ssdBrandList","setSsdBrandList","sizeList","size","document","querySelector","storage","modelList","brand","model","SelectParts","Container","NavBar","action","filterList","filter","ssd","newState","build","combineReducers","App","useReducer","reducer","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d2ba34b.chunk.js","sourcesContent":["// Libraries\nimport { createContext } from \"react\";\n\nconst AppContext = createContext();\n\nexport default AppContext;","// Libraries\nimport React, { useContext } from \"react\";\n// Context\nimport AppContext from \"../../contexts/AppContext\";\n\nconst BuildResult = () => {\n    // Context\n    const { state } = useContext(AppContext)\n    // Render\n    return (\n        <div className=\"m-2position-relative\">\n            <h4>Spec</h4>\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th>CPU</th>\n                        <th>GPU</th>\n                        <th>RAM</th>\n                        <th>Strage</th>\n                        <th>Gaming</th>\n                        <th>Working</th>\n                    </tr>\n                </thead>\n                <tbody>\n                                 \n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default BuildResult;","// Libraries\nimport React from \"react\";\n// Components\nimport BuildResult from \"../resultComponents/BuildResult\";\n\nconst BuildButton = () => {\n    const build = e => {\n        e.preventDefault();\n        console.log(\"hello world\");\n        return <BuildResult />;\n    }\n\n    return <button type=\"button\" className=\"btn btn-outline-dark m-3\" onClick={build}>Build PC</button>;\n};\n\nexport default BuildButton;","export const BUILD_CPU_MODEL = \"BUILD_CPU_MODEL\";\nexport const BUILD_GPU_MODEL = \"BUILD_GPU_MODEL\";\nexport const BUILD_RAM_MODEL = \"BUILD_RAM_MODEL\";\nexport const BUILD_STORAGE_SIZE = \"BUILD_STORAGE_SIZE\";\nexport const BUILD_STORAGE_BRAND = \"BUILD_STORAGE_BRAND\";\nexport const BUILD_STORAGE_MODEL = \"BUILD_STORAGE_MODEL\";\n\nexport const BUILD_PC = \"BUILD_PC\";","// Libraries\nimport React from \"react\";\n\nconst GeneralOption = ({value}) => {\n    // Render\n    return <option value={value}>{value}</option>;\n}\n\nexport default GeneralOption;","// Libraries\nimport React from \"react\";\n\nconst ModelOption = ({value}) => {\n    // Render\n    return <option value={value.Model} data-benchmark={value.Benchmark}>{value.Model}</option>;\n}\n\nexport default ModelOption;","export const URL = \"https://api.recursionist.io/builder/computers?type=\";","// Libraries\nimport React, { useEffect, useContext, useState } from \"react\";\n// Actions\nimport { BUILD_CPU_MODEL } from \"../../actions\"\n// Components\nimport GeneralOption from  \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n// Contexts\nimport AppContext from \"../../contexts/AppContext\";\n// Constants\nimport { URL } from \"../../constants\";\n\nconst Cpu = () => {\n    // Contexts\n    const { state, dispatch } = useContext(AppContext);\n    // State\n    const [ brandList,setBrandList ] = useState([]);\n    const [ cpuList, setCpuList ] = useState([]);\n    // Effect\n    useEffect(() => {fetch(URL+'cpu')\n      .then(response => response.json())\n        .then(data => {\n            let brandList = [];\n            data.forEach(obj => {\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n            });\n            setBrandList(brandList);\n            setCpuList(data)})\n    }, []);\n    // EventFunction\n    const selectModel = e => {\n        e.preventDefault();\n        dispatch({type: BUILD_CPU_MODEL, cpuList});\n    }\n    // Render\n    return (\n        <div className=\"step1 p-2\">\n            <span className=\"h4 p-1\">step1 : Select Your CPU</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-6\" onChange={selectModel} id=\"brand-of-cpu\">\n                        <option value=\"-\">-</option>\n                        {brandList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-6\" id=\"model-of-cpu\">\n                        {state.cpu.map((value, index) => <ModelOption key={index} value={value}/>)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Cpu;","// Libraries\nimport React, { useEffect, useContext, useState } from \"react\";\n// Actions\nimport { BUILD_GPU_MODEL } from \"../../actions\"\n// Components\nimport GeneralOption from \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n// Contexts\nimport AppContext from \"../../contexts/AppContext\";\n// Constants\nimport { URL } from \"../../constants\";\n\nconst Gpu = () => {\n    // Context\n    const {state, dispatch} = useContext(AppContext);\n    // State\n    const [gpuList, setGpuList] = useState([]);\n    const [brandList,setBrandList] = useState([]);\n\n    // Effect\n    useEffect(() => {fetch(URL+'gpu')\n      .then(response => response.json())\n        .then(data => {\n            let brandList = [];\n            data.forEach(obj => {\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n            });\n            setBrandList(brandList);            \n            setGpuList(data)})\n    }, []);\n\n    // EventFunction\n    const selectModel = e => {\n        e.preventDefault();\n        dispatch({type: BUILD_GPU_MODEL, gpuList});\n    }\n\n    // Render\n    return (\n        <div className=\"step2 p-2\">\n            <span className=\"h4 p-1\">step2: Select your GPU</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-6\" onChange={selectModel} id=\"brand-of-gpu\" >\n                        <option value=\"-\">-</option>\n                        {brandList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-6\" id=\"model-of-gpu\">\n                        {state.gpu.map((value, index) => <ModelOption key={index} value={value}/>)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Gpu;","// Libraries\nimport React, { useEffect, useContext, useState } from \"react\";\n// Actions\nimport { BUILD_RAM_MODEL } from \"../../actions\"\n// Components\nimport GeneralOption from \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n// Contexts\nimport AppContext from \"../../contexts/AppContext\";\n// Constants\nimport { URL } from \"../../constants\";\n\nconst Ram = () => {\n    // Context\n    const { state, dispatch } = useContext(AppContext);\n    // State\n    const [ ramList, setRamList ] = useState([]);\n    const [ amountList,setAmountList ] = useState([]);\n    const [ brandList,setBrandList ] = useState([]);\n    // Effect\n    useEffect(() => {fetch(URL+'ram')\n      .then(response => response.json())\n        .then(data => {\n            let brandList = [];\n            let amountList = [];\n            data.forEach(obj => {\n                // モデルの中から本数のみを正規表現で取得\n                const amount = obj.Model.match(/\\dx/g).toString().substring(0,1);\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n                if (!amountList.includes(amount)) amountList.push(amount);\n            });\n            setBrandList(brandList); \n            setAmountList(amountList.sort((a, b) => a - b));           \n            setRamList(data)})\n    }, []);\n    // EventFunction\n    const selectModel = e => {\n        e.preventDefault();\n        dispatch({type: BUILD_RAM_MODEL, ramList});\n    }\n    // Render\n    return (\n        <div className=\"step3 p-2\">\n            <span className=\"h4 p-1\">step3: Select your RAM</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">How many?</span>\n                    <select className=\"form-control col-4\" onChange={selectModel} id=\"amount-of-ram\">\n                        <option value=\"-\">-</option>\n                        {amountList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-4\" onChange={selectModel} id=\"brand-of-ram\">\n                        <option value=\"-\">-</option>\n                        {brandList.map((value, index) => <GeneralOption key={index} value={value}/>)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-4\" id=\"model-of-ram\">\n                        {state.ram.map((value, index) => <ModelOption key={index} value={value}/>)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Ram;","// Libraries\nimport React, { useEffect, useContext, useState } from \"react\";\n// Actions\nimport { BUILD_STORAGE_BRAND, BUILD_STORAGE_MODEL, BUILD_STORAGE_SIZE } from \"../../actions\";\n// Conponents\nimport GeneralOption from \"./options/GeneralOption\";\nimport ModelOption from \"./options/ModelOption\";\n// Contexts\nimport AppContext from \"../../contexts/AppContext\";\n// Constants\nimport { URL } from \"../../constants\";\n\nconst Strage = () => {\n    // Context\n    const { state, dispatch } = useContext(AppContext);\n    // State\n    const [hddModelList, setHddModelList] = useState([]);\n    const [ssdModelList, setSsdModelList] = useState([]);\n    const [hddSizeList, setHddSizeList] = useState([]);\n    const [ssdSizeList, setSsdSizeList] = useState([]);\n    const [hddBrandList, setHddBrandList] = useState([]);\n    const [ssdBrandList, setSsdBrandList] = useState([]);\n    // Effect for HDD\n    useEffect( () => {fetch(URL+'hdd')\n      .then(response => response.json())\n        .then(data => {\n            let sizeList = [];\n            let brandList = [];\n            data.forEach(obj => {\n                // モデルの中からバイト数のみを正規表現で取得\n                const size = obj.Model.match(/\\d*[TG]B/g).toString();\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n                if (!sizeList.includes(size)) sizeList.push(size);\n            });\n            setHddSizeList(sizeList);  \n            setHddBrandList(brandList); \n            setHddModelList(data);\n        })\n    }, []);\n    // Effect for SSD\n    useEffect(() => {fetch(URL+'ssd')\n      .then(response => response.json())\n        .then(data => {\n            let sizeList = [];\n            let brandList = [];\n            data.forEach(obj => {\n                // モデルの中からバイト数のみを正規表現で取得\n                const size = obj.Model.match(/\\d*[TG]B/g).toString();\n                if (!brandList.includes(obj.Brand)) brandList.push(obj.Brand);\n                if (!sizeList.includes(size)) sizeList.push(size);\n            });\n            setSsdSizeList(sizeList); \n            setSsdBrandList(brandList); \n            setSsdModelList(data);\n        })\n    }, []);\n    // EventFunctrion for Size\n    const selectSize = e => {\n        e.preventDefault();\n        let sizeList;\n        const type = document.querySelector('#type-of-storage').value;\n        if (type === \"HDD\") sizeList = hddSizeList;\n        else if (type === \"SSD\") sizeList = ssdSizeList;\n        else sizeList = [];\n        dispatch({type: BUILD_STORAGE_SIZE, sizeList});\n    }\n    // EventFunction for Brand\n    const selectBrand = e => {\n        e.preventDefault();\n        let sizeList;\n        let brandList;\n        const type = document.querySelector('#type-of-storage').value;\n        if (type === \"HDD\") {\n            sizeList = hddSizeList;\n            brandList = hddBrandList;\n        } else if (type === \"SSD\") {\n            sizeList = ssdSizeList;\n            brandList = ssdBrandList;\n        } else {\n            sizeList = [];\n            brandList = [];\n        }\n        dispatch({type: BUILD_STORAGE_BRAND, sizeList, brandList});\n    }\n    // EventFunction for Model\n    const selectModel = e => {\n        e.preventDefault();\n        let sizeList;\n        let brandList;\n        let modelList;\n        const type = document.querySelector('#type-of-storage').value;\n        if (type === \"HDD\") {\n            sizeList = hddSizeList;\n            brandList = hddBrandList;\n            modelList = hddModelList;\n        } else if (type === \"SSD\") {\n            sizeList = ssdSizeList;\n            brandList = ssdBrandList;\n            modelList = ssdModelList;\n        } else {\n            sizeList = [];\n            brandList = [];\n            modelList = [];\n        }\n        dispatch({type: BUILD_STORAGE_MODEL, sizeList, brandList, modelList});\n    }\n    // Render\n    return (\n        <div className=\"step4 p-2\">\n            <span className=\"h4 p-1\">step4: Select your Storage</span>\n            <div className=\"col-6 p-1\">\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">HDD or SSD</span>\n                    <select className=\"form-control col-6\" onChange={selectSize} id=\"type-of-storage\">\n                        <option value=\"-\">-</option>\n                        <option value=\"HDD\">HDD</option>\n                        <option value=\"SSD\">SSD</option>\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Strage</span>\n                    <select className=\"form-control col-6\" onChange={selectBrand} id=\"size-of-storage\">\n                        {state.storage.size.map((value, index) => <GeneralOption key={index} value={value} />)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Brand</span>\n                    <select className=\"form-control col-6\" onChange={selectModel} id=\"brand-of-storage\">\n                        {state.storage.brand.map((value, index) => <GeneralOption key={index} value={value} />)}\n                    </select>\n                </div>\n                <div className=\"col-6 p-2\">\n                    <span className=\"h6 p-2\">Model</span>\n                    <select className=\"form-control col-6\" id=\"model-of-storage\">\n                        {state.storage.model.map((value, index) => <ModelOption key={index} value={value} />)}\n                    </select>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Strage;","// Libraries\nimport React from \"react\";\n// Components\nimport BuildButton from \"./BuildButton\";\nimport Cpu from \"./Cpu\";\nimport Gpu from \"./Gpu\";\nimport Ram from \"./Ram\";\nimport Strage from \"./Strage\";\n\nconst SelectParts = () => {\n    return (\n        <div className=\"col\">\n            <Cpu />\n            <Gpu />\n            <Ram />\n            <Strage />\n            <BuildButton />\n        </div>\n    );\n};\n\nexport default SelectParts;","// Libraries\nimport React from \"react\";\n// Components\nimport SelectParts from \"./selectComponents/SelectParts\";\nimport BuildResult from \"./resultComponents/BuildResult\";\n\nconst Container = () => {\n    // Render\n    return (\n        <div className=\"container-fluid bg-light p-2\">\n            <SelectParts />\n            <BuildResult />       \n        </div>\n    );\n};\n\nexport default Container;","// Libraries\nimport React from \"react\";\n\nconst NavBar = () => {\n    // Render\n    return (\n        <nav className=\"navbar navbar-light bg-secondary\">\n            <span className=\"navbar-brand mb-0 h1 text-light p-3\">Build Your Own PC</span>\n        </nav>\n    );\n};\n\nexport default NavBar;","// Actions\nimport {BUILD_CPU_MODEL} from \"../actions\";\n\nconst cpu = (state = [], action) => {\n    switch(action.type) {\n        case BUILD_CPU_MODEL:\n            const cpuList = action.cpuList;\n            const brand = document.querySelector('#brand-of-cpu').value;\n            const filterList = cpuList.filter(cpu => cpu.Brand === brand);\n            return filterList;\n        default:\n            return state;\n    }\n}\n\nexport default cpu;","// Actions\nimport { BUILD_GPU_MODEL } from \"../actions\";\n\nconst gpu = (state = [], action) => {\n    switch(action.type) {\n        case BUILD_GPU_MODEL:\n            const gpuList = action.gpuList;\n            const brand = document.querySelector('#brand-of-gpu').value;\n            const filterList = gpuList.filter(gpu => gpu.Brand === brand);\n            return filterList;\n        default:\n            return state;\n    }\n}\n\nexport default gpu;","// Actions\nimport { BUILD_RAM_MODEL } from \"../actions\";\n\nconst ram = (state = [], action) => {\n    switch(action.type) {\n        case BUILD_RAM_MODEL:\n            const ramList = action.ramList;\n            const amount = document.querySelector('#amount-of-ram').value;\n            const brand = document.querySelector('#brand-of-ram').value;\n            const filterList = ramList.filter(ram => ram.Brand === brand).filter(ram => ram.Model.match(/\\dx/g).toString().substring(0,1) === amount);\n            return filterList;\n        default:\n            return state;\n    }\n}\n\nexport default ram;","// Actions\nimport { BUILD_STORAGE_BRAND, BUILD_STORAGE_MODEL, BUILD_STORAGE_SIZE } from \"../actions\";\n\nconst ssd = (state = {}, action) => {\n    switch(action.type) {\n        case BUILD_STORAGE_SIZE:\n            return {size: action.sizeList, brand: [], model: []};\n        case BUILD_STORAGE_BRAND:\n            return {size: action.sizeList, brand: action.brandList, model: []};\n        case BUILD_STORAGE_MODEL:\n            const newState = {size: action.sizeList, brand: action.brandList, model: []};\n            const brand = document.querySelector('#brand-of-storage').value;\n            const size = document.querySelector('#size-of-storage').value;\n            const filterList = action.modelList.filter(storage => storage.Brand === brand).filter(storage => storage.Model.includes(size));\n            newState.model = filterList;\n            return newState;\n        default:\n            return state;\n    }\n}\n\nexport default ssd;","// Actions\nimport { BUILD_PC } from \"../actions\";\n\nconst build = (state = {}, action) => {\n    switch(action.type) {\n        case BUILD_PC:\n            return [];\n        default:\n            return state;\n    }\n};\n\nexport default build;","// Libraries\nimport { combineReducers } from \"redux\";\n// Reducers\nimport cpu from \"./cpu\";\nimport gpu from \"./gpu\";\nimport ram from \"./ram\";\nimport storage from \"./storage\";\nimport build from \"./build\";\n\nexport default combineReducers({cpu, gpu, ram, storage, build});","// Libraries\nimport React, {useReducer} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// Components\nimport AppContext from \"../contexts/AppContext\";\nimport Container from \"./Container\";\nimport NavBar from \"./NavBar\";\n// Reducers\nimport reducer from \"../reducers\";\n\nconst App = () => {\n  // initialState\n  const initialState = {cpu: [], gpu: [], ram: [], storage: {size: [], brand: [], model: []}};\n  // Reducer\n  const [state, dispatch] = useReducer(reducer, initialState);\n  // Render\n  return (\n    <AppContext.Provider value={{state, dispatch}}>\n      <NavBar />\n      <Container/>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;","// Libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Components\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}